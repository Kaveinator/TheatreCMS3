@model IEnumerable<TheatreCMS3.Areas.Blog.Models.BlogPost>  /* IEnumerable<>is getting the list */

@{
  ViewBag.Title = "Index";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Blog Post Index</h2>
@{ }


<p>
  @Html.ActionLink("Create New", "Create")
</p>

<!-- The popup message when a BlogPost is deleted should have a green theme and a Font-Awesome checkmark at the end of the sentence.  When the BlogPost is deleted, this message should appear and stay on the screen for 3 seconds, then fade out and disappear. -->
<div id="fademsg"></div>



<!--The BlogPost Index page will show all of the current BlogPosts.
      display the BlogPosts.
      Replace the table on the Index page.
      Each BlogPost should have its own container where the photo for the BlogPost is on the left
      and the information about the BlogPost on the right. -->
<!-- iterate through all items in database -->
@foreach (var item in Model)
{
  <!-- wrap for the blog posts, including buttons -->
  <div class="BlogPost-Index--Wrap" id="@item.BlogPostId">
    <div class="row">
      <!-- image to the left -->
      <!-- Add an image to the project to be a placeholder image until the BlogPhotos model is linked. -->
      <a class="BlogPost-Index--ImgLeft" href="https://placeholder.com"><img src="https://via.placeholder.com/300" /></a>

      <!-- body to the right -->
      <div class="BlogPost-Index--BodyCenterRight">
        <h7><b>Author: </b><span class="BlogPost-Author">@item.Author</span></h7>
        <h7><b>&emsp;&emsp;&emsp;Posted Date: </b><span class="BlogPost-Datetime">@item.DateTime</span></h7>
        <h4 class="BlogPost-Title">@item.Title</h4>
        <p class="BlogPost-Index--Contents">@item.Contents</p>

        <!-- Card 1 buttons to the right & bottom of the card body -->
        <!-- Use Font-Awesome to use icons inside of the buttons that represent each of those operations -->
        <div class="BlogPost-Index--BtnBar">
          <div class="row">
            <div class="BlogPost-Index--BtnGroup1">
              @Html.ActionLink(" Edit", "Edit", "BlogPost", new { id = item.BlogPostId }, new { @class = "BlogPost-Index--btnSecondary fas fa-edit" }) <!-- must pass in the BlogPostId for it to know which post this Edit method is associated with -->
            </div>
            <div class="BlogPost-Index--BtnGroup1">
              @Html.ActionLink(" Details", "Details", "BlogPost", new { id = item.BlogPostId }, new { @class = "BlogPost-Index--btnSecondary fas fa-info-circle" })
            </div>

            @*<div class="BlogPost-Index--BtnGroup2">
              @Html.ActionLink(" Delete", "Delete", "BlogPost", new { id = item.BlogPostId }, new { @class = "BlogPost-Index--btnDanger fas fa-trash-alt" })
               </div>*@

            <!-- Button trigger modal, click this will open modal popup -->
            <div class="BlogPost-Index--BtnGroup2">
              <button type="button" class="BlogPost-Index--btnDanger fas fa-trash-alt" data-toggle="modal" data-target="#BlogPost-Index--ModalConfirmDelete" data-BlogPostId="@item.BlogPostId"> Delete</button>

            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr />
}

<!-- Change the delete button for BlogPosts on the Index page.  Instead of taking the User to the Delete page, open a confirmation modal when that button is clicked.-->
<!-- locate Modal outside of other positioning to ensure popup will appear above other contents on the page.-->
<!-- Modal -->
<div class="modal fade" id="BlogPost-Index--ModalConfirmDelete" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">

    <!-- 3 contents for the modal popup -->
    <div class="modal-content" style="border-radius: 20px;">
      <!-- override existing class with border-radius of 20px -->
      <div class="modal-header">
        <h2 class="modal-title" id="exampleModalLongTitle">Confirm Delete</h2>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Are You Sure You Want To Delete This Blog Post?</p>
      </div>

      <!-- The modal should have a confirm button and a cancel button -->
      <div class="modal-footer">
        <div class="BlogPost-Index--BtnGroup1">
          <button type="button" class="BlogPost-Index--btnSecondary fas fa-window-close" data-dismiss="modal"> Cancel</button>
        </div>
        <div class="BlogPost-Index--BtnGroup2">
          <button type="button" class="BlogPost-Index--btnDanger fas fa-trash-alt" id="BlogPost-Index--ConfirmDelete" data-dismiss="modal"> Confirm Delete</button>
        </div>
      </div>
    </div>
  </div>
</div>
<hr />

