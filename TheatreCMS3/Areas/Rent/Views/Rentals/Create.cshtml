@model TheatreCMS3.Areas.Rent.Models.Rental

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link rel="stylesheet" href="~/Areas/Content/Areas/Rent.css"/>
</head>


<body>
    <h2>Create Rental</h2>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.RentalName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @class = "form-control", placeholder = "Rental Name" } })
            @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RentalCost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @class = "form-control", placeholder = "Rental Cost" } })
            @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FlawsAndDamages, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @class = "form-control", placeholder = "Flaws and Damages" } })
            @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RentalType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RentalType, new SelectList(new[]
            {
                new SelectListItem {Text = "Rental", Value = "Rental" },
                new SelectListItem {Text = "RentalEquipment", Value = "RentalEquipment"},
                new SelectListItem {Text = "RentalRoom", Value = "RentalRoom"}
            }, "Value", "Text"),
            new { @class = "form-control", id = "RentalType" })
            @Html.ValidationMessageFor(model => model.RentalType, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.RentalName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @class = "form-control", placeholder = "Rental Name" } })
            @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RentalCost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @class = "form-control", placeholder = "Rental Cost" } })
            @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FlawsAndDamages, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @class = "form-control", placeholder = "Flaws and Damages" } })
            @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RentalType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RentalType, new SelectList(new[]
            {
                new SelectListItem {Text = "Rental", Value = "Rental" },
                new SelectListItem {Text = "RentalEquipment", Value = "RentalEquipment"},
                new SelectListItem {Text = "RentalRoom", Value = "RentalRoom"}
            }, "Value", "Text"),
            new { @class = "form-control", id = "RentalType" })
            @Html.ValidationMessageFor(model => model.RentalType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.ChokingHazard, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ChokingHazard, new { htmlAttributes = new { @class = "form-control", placeholder = "Choking Hazard" } })
            @Html.ValidationMessageFor(model => model.ChokingHazard, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.SuffocationHazard, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SuffocationHazard, new { htmlAttributes = new { @class = "form-control", placeholder = "Suffocation Hazard" } })
            @Html.ValidationMessageFor(model => model.SuffocationHazard, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control", placeholder = "Purchase Price" } })
            @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.RoomNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RoomNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Room Number" } })
            @Html.ValidationMessageFor(model => model.RoomNumber, "", new { @class = "text-danger" })
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.SquareFootage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SquareFootage, new { htmlAttributes = new { @class = "form-control", placeholder = "Square Footage" } })
                @Html.ValidationMessageFor(model => model.SquareFootage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.MaxOccupancy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxOccupancy, new { htmlAttributes = new { @class = "form-control", placeholder = "MaxOccupancy" } })
                @Html.ValidationMessageFor(model => model.MaxOccupancy, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="create-button">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-block">Create</button>
            </div>
        </div>

        <div class="create-button">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-block">Create</button>
            </div>
        </div>
    </div>
    }

    <br />
    <br />

    <div class="backtolist">
        <button type="submit" class="btn btn-block">@Html.ActionLink("Back to List", "Index")</button>
    </div>

</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
