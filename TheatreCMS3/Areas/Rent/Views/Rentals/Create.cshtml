@model TheatreCMS3.Areas.Rent.Models.Rental

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Rental</h2>
<meta name="viewport" content="width=device-width, initial-scale=1" />   <!--import for button hover effect-->


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
<div class="rental-form--container">
    <div class="form-horizontal rental-create-formhorizontal">
        <h4 class="rental-create--formheading">Rental</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group rental-create--formgroupheading1">
            @Html.LabelFor(model => model.RentalName, "Rental Name", htmlAttributes: new { @class = "control-label col-md-2 rental-create--formlabel1" })
            <!--above line "Rental Name" is the label adjusted heading/how to change that field-->
            <div class="col-md-10">
                @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Enter rental name" } })
                @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group rental-create--formgroupheading2">
            @Html.LabelFor(model => model.RentalCost, "Rental Cost", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Enter rental cost" } })
                <!--in above line see placeholder at end for how to insert placeholder text-->
                @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group rental-create--formgroupheading3">
            @Html.LabelFor(model => model.FlawsAndDamages, "Flaws And Damages", htmlAttributes: new { @class = "control-label col-md-2 rental-create-flawslabel" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Enter flaws and damages" } })
                @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--SUBMIT BUTTON-->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default rental-create--submitbutton" />
            </div>
        </div>
    </div>

    <!--back to list button-->
    <div>
        <!--"btn btn-default rental-create--backbuttoncontainer" for previous line 53-->
        <!--by adding btn btn-default to parent container we apply that to referenced
        'back to list' button-->
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn rental-create--backbutton" }) <!--right click-peek definition to see details-->
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
