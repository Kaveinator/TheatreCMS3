@using TheatreCMS3.Areas.Rent.Models
@model TheatreCMS3.Areas.Rent.Models.Rental


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <!--vars for RentalEquipment form component (otherwise we aren't able to call their properties)-->
    var RentalEquipment = new RentalEquipment();
    var ChokingHazard = RentalEquipment.ChokingHazard;
    var SuffocationHazard = RentalEquipment.SuffocationHazard;
    var PurchasePrice = RentalEquipment.PurchasePrice;
    <!--vars for RentalRoom form component-->
    var RentalRoom = new RentalRoom();
    var RoomNumber = RentalRoom.RoomNumber;
    var SquareFootage = RentalRoom.SquareFootage;
    var MaxOccupancy = RentalRoom.MaxOccupancy;

    <!--heading vars that change to match selected choice-->
    var RentalHeadingChange = "Rental";
    var RentalEquipmentHeadingChange = "Rental Equipment";
    var RentalRoomHeadingChange = "Rental Room";
}

<h2 class="rental-create--createrentalheading">Create Rental</h2>
<meta name="viewport" content="width=device-width, initial-scale=1" />   <!--import for button hover effect-->
<!--DROPDOWN-->
<div class="dropdown rental-create--dropdowncontainer">
    <button class="btn btn-secondary dropdown-toggle rental-create--dropdownbutton" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Select Rental Type
    </button>
    <div class="dropdown-menu rental-create--dropdownMenu" aria-labelledby="dropdownMenuButton">
        <a class="dropdown-item rental-create--choice1" onclick="showRental(), changeRentalHeading()" href="#">Rental</a>
        <!-- onclick = function you created in js that says x is hidden-->
        <!-- if doesn't work try html.dropdown list razor'-->
        <a class="dropdown-item rental-create--choice2" onclick="showRentalEquipment()" href="#">Rental Equipment</a>
        <a class="dropdown-item rental-create--choice3" onclick="showRentalRoom()" href="#">Rental Room</a>
    </div>
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="rental-form--container">

        <div class="form-horizontal rental-create--rentalForm">
            <h4 id="rental-create--formheading">this should change</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <!--======================================================================================================-->
            <!--RENTAL FORM-->
            <div class="rental-create--rentalformcomponent">
                <div class="form-group rental-create--formgroupheading1">
                    @Html.LabelFor(model => model.RentalName, "Rental Name", htmlAttributes: new { @class = "control-label col-md-2 rental-create--formlabel1" })
                    <!--above line "Rental Name" is the label adjusted heading/how to change that field-->
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Enter rental name" } })
                        @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-create--formgroupheading2">
                    @Html.LabelFor(model => model.RentalCost, "Rental Cost", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Enter rental cost" } })
                        <!--in above line see placeholder at end for how to insert placeholder text-->
                        @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-create--formgroupheading3">
                    @Html.LabelFor(model => model.FlawsAndDamages, "Flaws And Damages", htmlAttributes: new { @class = "control-label col-md-2 rental-create--flawslabel" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Enter flaws and damages" } })
                        @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <!--END RENTAL FORM-->
            <!--======================================================================================================-->
            <!--RENTAL EQUIPMENT FORM-->
            <div class="rental-create--rentalequipmentformcomponent">
                <div class="form-group rental-create--formgroupheading1">
                    @Html.LabelFor(model => ChokingHazard, "Choking Hazard", htmlAttributes: new { @class = "control-label col-md-2 rental-create--formlabel1" })
                    <!--above line "Rental Name" is the label adjusted heading/how to change that field-->
                    <div class="col-md-10">
                        @Html.EditorFor(model => ChokingHazard, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Choking Hazard?" } })
                        @Html.ValidationMessageFor(model => ChokingHazard, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-create--formgroupheading2">
                    @Html.LabelFor(model => SuffocationHazard, "Suffocation Hazard", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => SuffocationHazard, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Suffocation Hazard?" } })
                        <!--in above line see placeholder at end for how to insert placeholder text-->
                        @Html.ValidationMessageFor(model => SuffocationHazard, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-create--formgroupheading3">
                    @Html.LabelFor(model => PurchasePrice, "Purchase Price", htmlAttributes: new { @class = "control-label col-md-2 rental-create-flawslabel" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => PurchasePrice, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Purchase Price" } })
                        @Html.ValidationMessageFor(model => PurchasePrice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <!--END EQUIPMENT RENTAL FORM-->
            <!--======================================================================================================-->
            <!--RENTAL ROOM FORM-->
            <!--======================================================================================================-->
            <div class="rental-create--rentalroomformcomponent">
                <div class="form-group rental-create--formgroupheading1">
                    @Html.LabelFor(model => RoomNumber, "Room Number", htmlAttributes: new { @class = "control-label col-md-2 rental-create--formlabel1" })
                    <!--above line "Rental Name" is the label adjusted heading/how to change that field-->
                    <div class="col-md-10">
                        @Html.EditorFor(model => RoomNumber, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Room Number" } })
                        @Html.ValidationMessageFor(model => RoomNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-create--formgroupheading2">
                    @Html.LabelFor(model => SquareFootage, "Square Footage", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => SquareFootage, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Square Footage" } })
                        <!--in above line see placeholder at end for how to insert placeholder text-->
                        @Html.ValidationMessageFor(model => SquareFootage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-create--formgroupheading3">
                    @Html.LabelFor(model => MaxOccupancy, "Max Occupancy", htmlAttributes: new { @class = "control-label col-md-2 rental-create--flawslabel" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => MaxOccupancy, new { htmlAttributes = new { @class = "form-control rental-create--formcontrols", placeholder = "Max Occupancy" } })
                        @Html.ValidationMessageFor(model => MaxOccupancy, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <!--END RENTAL ROOM FORM-->
            <!--======================================================================================================-->
            <!--SUBMIT BUTTON-->
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default rental-create--submitbutton" />
                </div>
            </div>
        </div>

        <!--back to list button-->
        <div>
            <!--"btn btn-default rental-create--backbuttoncontainer" for previous line 53-->
            <!--by adding btn btn-default to parent container we apply that to referenced
            'back to list' button-->
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn rental-create--backbutton" }) <!--right click-peek definition to see details-->
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
