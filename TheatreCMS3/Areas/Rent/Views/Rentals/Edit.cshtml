@using TheatreCMS3.Areas.Rent.Models
@model TheatreCMS3.Areas.Rent.Models.Rental


@{
  ViewBag.Title = "Edit";
  Layout = "~/Views/Shared/_Layout.cshtml";


}



<h2>Edit Rental</h2>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal Rental-Edit--FormBackground">
    <div class="Rental-Edit--InputSizing">
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.RentalId)

      <div class="form-group">
        @Html.LabelFor(model => model.RentalName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Rental-Edit--InputWrap col-md-10">
          @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @placeholder = "Enter name of rental here", @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.RentalCost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Rental-Edit--InputWrap col-md-10">
          @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @placeholder = "Enter the cost of rental here", @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.FlawsAndDamages, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Rental-Edit--InputWrap col-md-10">
          @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @placeholder = "Enter any flaws or damages here", @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
        </div>
      </div>
    </div>

    @*Adding new forms here*@
    @if (Model.GetType() == typeof(RentalEquipment))
    {


      <div class="form-group">
        @Html.LabelFor(model => ((RentalEquipment)model).ChokingHazard, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Rental-Create--InputWrap col-md-10">
          @Html.EditorFor(model => ((RentalEquipment)model).ChokingHazard, new { htmlAttributes = new { @placeholder = "Enter if equipment is a choking hazard", @class = "form-control" } })
          @Html.ValidationMessageFor(model => ((RentalEquipment)model).ChokingHazard, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="form-group">
        @Html.LabelFor(model => ((RentalEquipment)model).SuffocationHazard, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Rental-Create--InputWrap col-md-10">
          @Html.EditorFor(model => ((RentalEquipment)model).SuffocationHazard, new { htmlAttributes = new { @placeholder = "Enter if equipment is a suffocation hazard", @class = "form-control" } })
          @Html.ValidationMessageFor(model => ((RentalEquipment)model).SuffocationHazard, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="form-group">
        @Html.LabelFor(model => ((RentalEquipment)model).PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Rental-Create--InputWrap col-md-10">
          @Html.EditorFor(model => ((RentalEquipment)model).PurchasePrice, new { htmlAttributes = new { @placeholder = "Enter the purchase price of equipment", @class = "form-control" } })
          @Html.ValidationMessageFor(model => ((RentalEquipment)model).PurchasePrice, "", new { @class = "text-danger" })
        </div>
      </div>
    }

    else if (Model.GetType() == typeof(RentalRoom))
    {


      <div class="form-group">
        @Html.LabelFor(model => ((RentalRoom)model).RoomNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Rental-Create--InputWrap col-md-10">
          @Html.EditorFor(model => ((RentalRoom)model).RoomNumber, new { htmlAttributes = new { @placeholder = "Enter the room number here", @class = "form-control" } })
          @Html.ValidationMessageFor(model => ((RentalRoom)model).RoomNumber, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="form-group">
        @Html.LabelFor(model => ((RentalRoom)model).SquareFootage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Rental-Create--InputWrap col-md-10">
          @Html.EditorFor(model => ((RentalRoom)model).SquareFootage, new { htmlAttributes = new { @placeholder = "Enter the square footage of the room here", @class = "form-control" } })
          @Html.ValidationMessageFor(model => ((RentalRoom)model).SquareFootage, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="form-group">
        @Html.LabelFor(model => ((RentalRoom)model).MaxOccupancy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Rental-Create--InputWrap col-md-10">
          @Html.EditorFor(model => ((RentalRoom)model).MaxOccupancy, new { htmlAttributes = new { @placeholder = "Enter the max occupancy of the room", @class = "form-control" } })
          @Html.ValidationMessageFor(model => ((RentalRoom)model).MaxOccupancy, "", new { @class = "text-danger" })
        </div>
      </div>
    }
  </div>


  <div class="form-group Rental-Edit--ButtonWrap">
    <div class="col-md-offset-2">
      <input type="submit" value="Save" class="btn btn-default Rental-Edit--Edit_Button" />
      <a href="../Index"><input type="button" value="Back to list" class="btn btn-default Rental-Edit--BackToList_Button" /></a>
    </div>
  </div>



}



@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
