@model TheatreCMS3.Areas.Rent.Models.Rental
@using TheatreCMS3.Areas.Rent.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var rental = new Rental();
    var rentalEquipment = new RentalEquipment();
    //var ChokingHazard = (RentalEquipment)ViewData["ChokingHazard"];
    //var SuffocationHazard = (RentalEquipment)ViewData["SuffocationHazard"]; //===========VIEWDATA FOR RENTEQ====== 11/30 4pm
    //var PurchasePrice = (RentalEquipment)ViewData["PurchasePrice"];

    var rentalRoom = new RentalRoom();
    //var RoomNumber = rentalRoom.RoomNumber;
    //var SquareFootage = rentalRoom.SquareFootage;
    //var MaxOccupancy = rentalRoom.MaxOccupancy;
    rental.RentalOptions = ERentalType.Rental;
    rentalEquipment.RentalOptions = ERentalType.RentalEquipment;
    rentalRoom.RentalOptions = ERentalType.RentalRoom;
}

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal Rental-Create--FormContainer">
    <h2 class="text-center">Edit Rental</h2>
    <hr />

    @* Dropdown *@
    <div class="form-group">
        @Html.DropDownListFor(model => model.RentalOptions,
                        new SelectList(Enum.GetValues(typeof(ERentalType))),
                        "Select rental type:"
                        )
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RentalId)

    @*Rental*@
    <div class="Rental-Create--RentalView">
        @*id="@ERentalType.Rental"*@
        <div class="form-group">
            @*id=" @ERentalType.Rental"*@
            @Html.LabelFor(model => model.RentalName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RentalCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FlawsAndDamages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md">
                @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    @*Rental Equipment*@
    <div class="Rental-Create--RentalEquipmentView">
        <div class="form-group">
            @Html.LabelFor(RentalEquipment => rentalEquipment.ChokingHazard, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(RentalEquipment => rentalEquipment.ChokingHazard, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(RentalEquipment => rentalEquipment.ChokingHazard, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(RentalEquipment => rentalEquipment.SuffocationHazard, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(RentalEquipment => rentalEquipment.SuffocationHazard, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(RentalEquipment => rentalEquipment.SuffocationHazard, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(RentalEquipment => rentalEquipment.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(RentalEquipment => rentalEquipment.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(RentalEquipment => rentalEquipment.PurchasePrice, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @*Rental Rooms*@
    <div class="Rental-Create--RentalRoomView">
        <div class="form-group">
            @Html.LabelFor(model => rentalRoom.RoomNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => rentalRoom.RoomNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => rentalRoom.RoomNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => rentalRoom.SquareFootage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => rentalRoom.SquareFootage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => rentalRoom.SquareFootage, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => rentalRoom.MaxOccupancy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => rentalRoom.MaxOccupancy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => rentalRoom.MaxOccupancy, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group text-center">
        <div class="text-center">
            <button type="submit" class="Rental-Create--CreateButton">Save</button>
        </div>
        <div class="text-center">
            <button class="Rental-Create--BackToListButton">@Html.ActionLink("Back to List", "Index")</button>
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
