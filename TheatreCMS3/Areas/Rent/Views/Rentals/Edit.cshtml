@using TheatreCMS3.Areas.Rent.Models
@model TheatreCMS3.Areas.Rent.Models.Rental

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <!--vars for RentalEquipment form component (otherwise we aren't able to call their properties)-->
    var RentalEquipment = new RentalEquipment();
    var ChokingHazard = RentalEquipment.ChokingHazard;
    var SuffocationHazard = RentalEquipment.SuffocationHazard;
    var PurchasePrice = RentalEquipment.PurchasePrice;
    <!--vars for RentalRoom form component-->
    var RentalRoom = new RentalRoom();
    var RoomNumber = RentalRoom.RoomNumber;
    var SquareFootage = RentalRoom.SquareFootage;
    var MaxOccupancy = RentalRoom.MaxOccupancy;
}

<h2 class="rental-edit--editrentalheading">Edit</h2>

<!--DROPDOWN-->
<div class="dropdown rental-edit--dropdowncontainer">
    <button class="btn btn-secondary dropdown-toggle rental-edit--dropdownbutton" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Select Rental Type
    </button>
    <div class="dropdown-menu rental-edit--dropdownMenu" aria-labelledby="dropdownMenuButton">
        <a class="dropdown-item rental-edit--choice1" onclick="showRentalEdit(), changeRentalHeading1Edit()" href="#">Rental</a>
        <a class="dropdown-item rental-edit--choice2" onclick="showRentalEquipmentEdit(), changeRentalHeading2Edit()" href="#">Rental Equipment</a>
        <a class="dropdown-item rental-edit--choice3" onclick="showRentalRoomEdit(), changeRentalHeading3Edit()" href="#">Rental Room</a>
    </div>
</div>

<!-------------------------------------------3 FORM COMPONENTS---------------------------------------------------------->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="rental-edit--formcontainer">
        <div class="form-horizontal rental-edit--formhorizontal">
            <h4 id="rental-edit--formheading">Rental</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.RentalId)

            <!--======================================================================================================-->
            <!--RENTAL FORM-->

            <div class="rental-edit--rentalformcomponent">
                <div class="form-group rental-edit--formgroupheading1">
                    @Html.LabelFor(model => model.RentalName, "Rental Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @class = "form-control rental-edit--formcontrols", placeholder = "Enter rental name" } })
                        @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-edit--formgroupheading2">
                    @Html.LabelFor(model => model.RentalCost, "Rental Cost", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @class = "form-control rental-edit--formcontrols", placeholder = "Enter rental cost" } })
                        @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-edit--formgroupheading3">
                    @Html.LabelFor(model => model.FlawsAndDamages, "Flaws And Damages", htmlAttributes: new { @class = "control-label col-md-2 rental-edit--flawslabel" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @class = "form-control rental-edit--formcontrols", placeholder = "Enter flaws and damages" } })
                        @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <!--======================================================================================================-->
            <!--RENTAL EQUIPMENT FORM-->
            <div class="rental-edit--rentalequipmentformcomponent">
                <div class="form-group rental-edit--formgroupheading1">
                    @Html.LabelFor(model => ChokingHazard, "Choking Hazard", htmlAttributes: new { @class = "control-label col-md-2 rental-edit--formlabel1" })
                    <!--above line "Choking Hazard" is the label adjusted heading/how to change that field-->
                    <div class="col-md-10">
                        @Html.EditorFor(model => ChokingHazard, new { htmlAttributes = new { @class = "form-control rental-edit--formcontrols", placeholder = "Choking Hazard?" } })
                        @Html.ValidationMessageFor(model => ChokingHazard, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-edit--formgroupheading2">
                    @Html.LabelFor(model => SuffocationHazard, "Suffocation Hazard", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => SuffocationHazard, new { htmlAttributes = new { @class = "form-control rental-edit--formcontrols", placeholder = "Suffocation Hazard?" } })
                        <!--in above line see placeholder at end for how to insert placeholder text-->
                        @Html.ValidationMessageFor(model => SuffocationHazard, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-edit--formgroupheading3">
                    @Html.LabelFor(model => PurchasePrice, "Purchase Price", htmlAttributes: new { @class = "control-label col-md-2 rental-edit--flawslabel" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => PurchasePrice, new { htmlAttributes = new { @class = "form-control rental-edit--formcontrols", placeholder = "Purchase Price" } })
                        @Html.ValidationMessageFor(model => PurchasePrice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <!--======================================================================================================-->
            <!--RENTAL ROOM FORM-->
            <div class="rental-edit--rentalroomformcomponent">
                <div class="form-group rental-edit--formgroupheading1">
                    @Html.LabelFor(model => RoomNumber, "Room Number", htmlAttributes: new { @class = "control-label col-md-2 rental-edit--formlabel1" })
                    <!--above line "Rental Name" is the label adjusted heading/how to change that field-->
                    <div class="col-md-10">
                        @Html.EditorFor(model => RoomNumber, new { htmlAttributes = new { @class = "form-control rental-edit--formcontrols", placeholder = "Room Number" } })
                        @Html.ValidationMessageFor(model => RoomNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-edit--formgroupheading2">
                    @Html.LabelFor(model => SquareFootage, "Square Footage", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => SquareFootage, new { htmlAttributes = new { @class = "form-control rental-edit--formcontrols", placeholder = "Square Footage" } })
                        <!--in above line see placeholder at end for how to insert placeholder text-->
                        @Html.ValidationMessageFor(model => SquareFootage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-edit--formgroupheading3">
                    @Html.LabelFor(model => MaxOccupancy, "Max Occupancy", htmlAttributes: new { @class = "control-label col-md-2 rental-edit--flawslabel" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => MaxOccupancy, new { htmlAttributes = new { @class = "form-control rental-edit--formcontrols", placeholder = "Max Occupancy" } })
                        @Html.ValidationMessageFor(model => MaxOccupancy, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <!--======================================================================================================-->
            <!---------------------------------------END 3 FORM COMPONENTS---------------------------------------------------------->

            <!--SUBMIT BUTTON-->
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default rental-edit--savebutton" />
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn rental-edit--backbutton" })   <!--apply bootstrap class when you create new class-->
        </div>

    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
