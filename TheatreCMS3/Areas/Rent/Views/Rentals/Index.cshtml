@model IEnumerable<TheatreCMS3.Areas.Rent.Models.Rental>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


<!------------------------------------NEW GRID LAYOUT REPLACING TABLE-------------------------------->
<!-------------------RENTAL COLUMNS--------------------->

<h3 class="rental-index--rentalsectionheading">Rental</h3>
<p class="rental-index--rentalsectionghosttextA">___________________________________________________________________________________________________</p> <!--red line under heading-->
<div class="row rental-index--outerrow">
    @foreach (var item in Model)
    {
        <div class="col">
            <div class="card rental-index--card1A">
                <div class="rental-index--innerphotocontainer1A">
                    <img src="~/Content/images/theater.jpg" alt="theatre photo" class="card-img-top rental-index--rentalsectionimage1" />
                    <br />
                </div>
                <p class="rental-index--rentalsectiontext1A"> 
                    @Html.DisplayFor(model => item.RentalName)
                    <br />$@Html.DisplayFor(model => item.RentalCost)/day
                </p>
                <br />
                <p class="rental-index--rentalsectionghosttextB">
                    ____________________________
                </p>
                <br />


                <!--BUTTONS-->
                <div class="rental-index--buttoncontainer1A">
                    <!--Link for Icons: https://fontawesome.com/v4/icons/-->


                    <!-----------------------IMPORTANT see line 46 this is how we need to have the syntax to apply btn class/classes to our actionlink-->
                    <!--Edit button-->
                    @Html.ActionLink("Edit", "Edit", new { id = item.RentalId }, new { @class = "btn" })>
                    <!--dont include controller name or null in this case, seems like since our controller is creating this Index View and "Edit" is
                    also contained in same controller we don't need it specified here-->
                    <!--TRY putting all class specifiers on the Razor syntax part of statement where adding class to apply previous styling-->
                    Edit<span class="badge badge-light"><i class="fa fa-paint-brush" aria-hidden="true"></i></span>
                    <span class="sr-only">Edit Button</span>

                    <!--Details button-->
                    @Html.ActionLink("Details", "Details", new { id = item.RentalId }, new { @class = "btn" })>
                    Details <span class="badge badge-light"><i class="fa fa-info" aria-hidden="true"></i></span>
                    <span class="sr-only">Details Button</span>

                    <!--Delete button-->
                    @Html.ActionLink("Delete", "Delete", new { id=item.RentalId }, new { @class = "btn" })>
                        <span class="badge badge-light"><i class="fa fa-trash rental-index--trashicon" aria-hidden="true"></i></span>
                        <span class="sr-only">Delete Button</span>
                </div>
            </div>
        </div>
    }
    <div class="col">col</div>
    <div class="w-100"></div>   <!--enter "w-100" wherever you want to break into new row of columns-->
    <div class="col">col</div>
    <div class="col">col</div>
</div>




<!--OLD VERSION OF TABLE-->
@*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.RentalName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RentalCost)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FlawsAndDamages)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RentalName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RentalCost)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FlawsAndDamages)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.RentalId }) |
                @Html.ActionLink("Details", "Details", new { id=item.RentalId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.RentalId })
            </td>
        </tr>
    }

    </table>*@
