@model IEnumerable<TheatreCMS3.Areas.Rent.Models.RentalRequest>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<!--Part1: Create an accordion to display all the rental requests-->
<!--Main accordion container-->
<div class="rentalRequests-Index--accordionContainer">
    <!--Looping through our Rental Request items-->
    @foreach (var item in Model)
    {
        <div>
            <input type="checkbox" name="RentalRequest_accordion" id = @Html.DisplayFor(modelItem => item.RentalRequestID)  class="rentalRequests-Index--accordionInput" />
            <label for= @Html.DisplayFor(modelItem => item.RentalRequestID) class="rentalRequests-Index--accordionLabel">
                @Html.DisplayNameFor(model => model.Company): @Html.DisplayFor(modelItem => item.Company) 
                <br />
                @Html.DisplayNameFor(model => model.ContactPerson): @Html.DisplayFor(modelItem => item.ContactPerson) 
                <br />
                <span class="rentalRequests-Index--accordionLabelRT">
                    <!--Logic to include time remaining/time till start-->
                    @if (item.StartTime > DateTime.Now)
                    {
                        // Calculating time difference
                        var timeTilRentStarts = (item.StartTime - DateTime.Now).TotalDays;
                        // Converting to string and rounding to 2 decimal places
                        string tStart = $"{timeTilRentStarts:0.00}";
                        // Display results
                        <span>@Html.DisplayName("Time till start: ") <br /> @tStart days</span>
                    }
                    else if (item.StartTime < DateTime.Now && item.EndTime > DateTime.Now)
                    {
                        // Calculating time difference
                        var timeRemaining = (item.EndTime - DateTime.Now).TotalDays;
                        // Converting to string and rounding to 2 decimal places
                        string tRemaining = $"{timeRemaining:0.00}";
                        // Display results
                        <span>@Html.DisplayName("Time Remaining: ")<br /> @tRemaining days</span>
                    }
                    else
                    {
                        // Calculating time difference
                        var timeRemaining = (item.EndTime - DateTime.Now).TotalDays;
                        // Converting to string and rounding to 2 decimal places
                        string tRemaining = $"{timeRemaining:0.00}";
                        // Display results
                        <span>@Html.DisplayName("Overdue Rental: ")<br /> @tRemaining days</span>
                    }
                </span>

            </label>

            <div class="rentalRequests-Index--accordionContent">
                <p>
                    @Html.DisplayNameFor(model => model.StartTime): @Html.DisplayFor(modelItem => item.StartTime)
                    <br />
                    @Html.DisplayNameFor(model => model.EndTime): @Html.DisplayFor(modelItem => item.EndTime)
                    <br />
                    @Html.DisplayNameFor(model => model.RentalCode): @Html.DisplayFor(modelItem => item.RentalCode)
                    <br />
                    @Html.DisplayNameFor(model => model.ProjectInfo): @Html.DisplayFor(modelItem => item.ProjectInfo)
                    <br />

                    <!--Need to Include Rentals-->

                    @Html.DisplayNameFor(model => model.Accepted): @Html.DisplayFor(modelItem => item.Accepted)
                    <br />

                    @Html.DisplayNameFor(model => model.ContractSigned): @Html.DisplayFor(modelItem => item.ContractSigned)
                    <br />

                    <!--Need to Include Survey-->

                    <hr />
                    @Html.ActionLink("Edit", "Edit", new { id = item.RentalRequestID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.RentalRequestID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.RentalRequestID })
                </p>
            </div>
              
        </div>
    }
   
</div>

