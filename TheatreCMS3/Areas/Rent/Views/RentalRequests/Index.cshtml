@model IEnumerable<TheatreCMS3.Areas.Rent.Models.RentalRequest>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


<button class="btn btn-success rentalrequests-index--expiredbutton" id="rentalrequests-index--expiredtoggle">
    <div id="rentalrequests-index--expiredText">Expired Rentals</div>
</button>


<div id="accordion">
    @{int i = 0; }
    @foreach (var item in Model)
    {
        <div class="card rentalrequests-index--card @(item.EndTime.AddDays(7) >= DateTime.Now?"rentalrequests-index--currentrequests":"rentalrequests-index--expiredrequests")">
            <div class="card-header rentalrequests-index--cardheader" id="heading_@i">
                <h5 class="mb-0">
                    <button class="btn btn-link rentalrequests-index--button" data-toggle="collapse"
                            data-target="#collapse_@i" aria-expanded="false" aria-controls="collapse_@i">
                        <div class="rentalrequests-index--buttoncompany">Company: @Html.DisplayFor(modelItem => item.Company)</div>
                        <div class="rentalrequests-index--buttonperson">
                            @Html.DisplayNameFor(model => model.ContactPerson)
                            :
                            @Html.DisplayFor(modelItem => item.ContactPerson)
                        </div>
                        @if (item.StartTime > DateTime.Now)
                        {
                            <div class="rentalrequests-index--buttontime">Time Until Start: @item.GetTimeTillStart().Days days</div>
                        }
                        else
                        {
                            <span class="rentalrequests-index--buttontime">Time Remaining: @item.GetTimeRemaining().Days days</span>
                        }
                    </button>
                </h5>
            </div>

            <div id="collapse_@i" class="collapse" aria-labelledby="heading_@i" data-parent="#accordion">
                <div class="card-body rentalrequests-index--buttonbody">
                    <div class="row rentalrequests-index--buttonbodyrow1">
                        <div class="col-sm">
                            Start Time: <br />
                            @item.StartTime.ToString("hh:mm tt")<br />
                            @item.StartTime.ToString("MMMM dd, yyyy")


                        </div>
                        <div class="col-sm">
                            End Time: <br />
                            @item.EndTime.ToString("hh:mm tt")<br />
                            @item.EndTime.ToString("MMMM dd, yyyy")
                        </div>
                    </div>

                    <div class="row">
                        @Html.DisplayNameFor(model => model.RentalCode)
                        :
                        @Html.DisplayFor(model => item.RentalCode)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.ProjectInfo)
                        :
                        @Html.DisplayFor(modelItem => item.ProjectInfo)
                    </div>
                    <div class="row">
                        Rentals: @*@item.Rentals<br />*@
                    </div>
                    <div class="row">
                        Accepted: @item.Accepted
                    </div>
                    <div class="row">
                        Contract Signed: @item.ContractSigned
                    </div>
                    <div class="row">
                        Survey: Rental Survey
                    </div>
                    <div class="row">
                        @Html.ActionLink("Edit", "Edit", new { id = item.RentalRequestId })
                        &nbsp;|&nbsp;
                        @Html.ActionLink("Details", "Details", new { id = item.RentalRequestId })
                        &nbsp;|&nbsp;
                        @Html.ActionLink("Delete", "Delete", new { id = item.RentalRequestId })
                    </div>
                </div>
            </div>
        </div>

        i++;
    }

</div>



<script>
    // Toggles back and forth between expired and current Rental Requests.
    document.getElementById("rentalrequests-index--expiredtoggle").addEventListener("click", function () {
        var expiredStatus = document.getElementById("rentalrequests-index--expiredText");
        if (expiredStatus.textContent == "Expired Rentals") {
            console.log("Expiredstatus == expired rentals.")
            currentRequests = document.getElementsByClassName("rentalrequests-index--currentrequests");
            var i;
            for (i = 0; i < currentRequests.length; i++) {
                currentRequests[i].style.display = "none";
            }
            expiredRequests = document.getElementsByClassName("rentalrequests-index--expiredrequests");
            var i;
            for (i = 0; i < expiredRequests.length; i++) {
                expiredRequests[i].style.display = "inline-block";
            }

            document.getElementById("rentalrequests-index--expiredText").innerHTML = "Current Rentals";
        }
        else if (expiredStatus.textContent == "Current Rentals") {
            console.log("Expiredstatus == Current rentals.")
            currentRequests = document.getElementsByClassName("rentalrequests-index--currentrequests");
            var i;
            for (i = 0; i < currentRequests.length; i++) {
                currentRequests[i].style.display = "inline-block";
            }
            expiredRequests = document.getElementsByClassName("rentalrequests-index--expiredrequests");
            var i;
            for (i = 0; i < expiredRequests.length; i++) {
                expiredRequests[i].style.display = "none";
            }
            document.getElementById("rentalrequests-index--expiredText").innerHTML = "Expired Rentals";
        }
    });

</script>

