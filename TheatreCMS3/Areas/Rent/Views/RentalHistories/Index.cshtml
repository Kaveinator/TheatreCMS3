@model IEnumerable<TheatreCMS3.Areas.Rent.Models.RentalHistory>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div class="RentalHistory-Index--TableContainer">
    <table id="indexTable" class="RentalHistory-Index--Table">
        <tr>
            <th colspan="2">
                Most recent Rental Histories
            </th>
            <th colspan="2">
                <label>Sorted By:</label>
                <button class="btnMargin btn btn-dark dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                No Extra Sorting...
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <div class="dropdown-item">@Html.ActionLink("No Extra Sorting...", "Index", new { sortOrder = ViewBag.IdSortParm })</div>
                    <div class="dropdown-item">@Html.ActionLink("Damaged Rentals", "Index", new { sortOrder = ViewBag.DamagedSortParm })</div>
                    <div class="dropdown-item">@Html.ActionLink("Undamaged Rentals", "Index", new { sortOrder = ViewBag.UndamagedSortParm })</div>
                    <div class="dropdown-item">@Html.ActionLink("Rentals A-Z", "Index", new { sortOrder = ViewBag.AzSortParm })</div>
                    <div class="dropdown-item">@Html.ActionLink("Rentals Z-A", "Index", new { sortOrder = ViewBag.ZaSortParm })</div>
                </div>
            </th>
        </tr>

        @foreach (var item in Model)
         {
            <tr>
                <td>
                    @{var itemType = item.RentalDamaged;}
                    @if (itemType == true)
                    {
                        <i class="fa fa-times-circle">@Html.DisplayFor(modelItem => item.RentalDamaged)</i>
                    }
                    else
                    {
                        <i class="fa fa-check-circle">@Html.DisplayFor(modelItem => item.RentalDamaged)</i>
                    }
                </td>
                <td>
                    <div class="badge badge-dark">@Html.DisplayFor(modelItem => item.Rental)</div>
                </td>
                <td>
                    @{ var description = item.DamageIncurred;}
                    @if (description == null)
                    {
                        <div>---</div>
                    }
                    else
                    {
                        <div class="ellipsis">@Html.DisplayFor(modelItem => item.DamageIncurred)</div>
                    }
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btnMargin btn btn-dark" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-ellipsis-v"></i></button>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
                            <div class="dropdown-item">
                                <i class="fa fa-pencil-square-o"></i>@Html.ActionLink("Edit", "Edit", new { id = item.RentalHistoryId })
                            </div>
                            <div class="dropdown-item">
                                <i class="fa fa-info-circle"></i>@Html.ActionLink("Details", "Details", new { id = item.RentalHistoryId })
                            </div>
                            <br />
                            <div class="dropdown-item">
                                <div class="delete">
                                    <i class="fa fa-trash"></i>@Html.ActionLink("Delete", "Delete", new { id = item.RentalHistoryId })
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
         }

    </table>
</div>

