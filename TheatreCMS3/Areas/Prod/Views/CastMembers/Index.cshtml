@model IEnumerable<TheatreCMS3.Areas.Prod.Models.CastMember>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="display-2 text-center">Cast Members</h2>
<hr />

@* Search bar *@
@using (Html.BeginForm("Index", "CastMembers", FormMethod.Get))
{
    <div class="float-right mb-4">
        @Html.TextBox("search")<input type="submit" name="submit" value="Search" class="CastMember-Index--search"/>
    </div>
}

@* Button for Create page *@
<div class="text-center">
    <button type="button" onclick="location.href='@Url.Action("Create", "CastMembers")'" class="btn btn-block" id="CastMember-CreateEdit--yellowButton">ADD A NEW CAST MEMBER</button>
</div>
<hr class="CastMember-Index--greyLine">

@* Displays cast members in cards, sorted by ProductionTitle.
   Will not show ProductionTitle if no cast members found in search.
   'Other' section is moved to the end of page. *@
@if (Model.Count() == 0)
{
    <h2 class="display-4 mt-5">Records not found</h2>
}
else
{
    // get list of production titles
    var titles = Model.Select(m => m.ProductionTitle).Distinct();

    // move "Other" category to the end
    var others = titles.Where(x => x == "Other");
    var nonnulls = titles.Where(x => x != "Other");
    var result = nonnulls.Concat(others);

    // for each title, make a heading and card-deck
    foreach (var title in result)
    {
        <h2 class="display-4">@title</h2>
        <hr />

        <div class="card-deck">

            @* for each cast member in this production title, make a card *@
            @foreach (var item in Model)
            {
                if (item.ProductionTitle == title)
                {
                    <div class="card bg-dark CastMember-Index--card">
                        <img src="@Url.Action("RenderImage", new { id = item.CastMemberId })" class="card-img CastMember-Index--image" />
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                            <a href="@Url.Action("Edit", "CastMembers", new { id = item.CastMemberId })" class="btn btn-warning CastMember-Index--editBtn CastMember-Index--button">Edit</a>
                            <a href="@Url.Action("Delete", "CastMembers", new { id = item.CastMemberId })" class="btn btn-danger CastMember-Index--delBtn CastMember-Index--button">Delete</a>
                            <a href="@Url.Action("Details", "CastMembers", new { id = item.CastMemberId })" class="stretched-link"></a>
                            <p class="CastMember-Index--text">Click to see more!</p>
                        </div>
                    </div>
                }
            }
        </div>

        <hr />
        <hr class="CastMember-Index--greyLine">
        <hr />
    }
}