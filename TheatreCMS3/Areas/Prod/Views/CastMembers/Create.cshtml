@model TheatreCMS3.Areas.Prod.Models.CastMember

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Cast Member</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal CastMembers-Create--FormContainer">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control CastMembers-Create--NameField", placeholder = @Html.DisplayNameFor(m => m.Name) } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.YearJoined, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.YearJoined, new { htmlAttributes = new { @class = "form-control CastMembers-Create--YearJoinedField", placeholder = @Html.DisplayNameFor(m => m.YearJoined) } })
            @Html.ValidationMessageFor(model => model.YearJoined, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MainRole, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.MainRole, htmlAttributes: new { @class = "form-control CastMembers-Create--RoleField" })
            @Html.ValidationMessageFor(model => model.MainRole, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrentMember, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.CurrentMember)
                @Html.ValidationMessageFor(model => model.CurrentMember, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Character, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Character, new { htmlAttributes = new { @class = "form-control CastMembers-Create--CharacterField", placeholder = @Html.DisplayNameFor(m => m.Character) } })
            @Html.ValidationMessageFor(model => model.Character, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CastYearLeft, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CastYearLeft, new { htmlAttributes = new { @class = "form-control CastMembers-Create--YearLeftField", placeholder = @Html.DisplayNameFor(m => m.CastYearLeft) } })
            @Html.ValidationMessageFor(model => model.CastYearLeft, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DebutYear, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DebutYear, new { htmlAttributes = new { @class = "form-control CastMembers-Create--DebutYearField", placeholder = @Html.DisplayNameFor(m => m.DebutYear) } })
            @Html.ValidationMessageFor(model => model.DebutYear, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group CastMembers-Create--btnContainer">
        <div class="btn btn-default CastMembers-Create--backtolistBtn">
            @Html.ActionLink("Back to List", "Index")
        </div>
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default CastMembers-Create--submitBtn" />
        </div>
        
    </div>
    </div>
}
    
    
    

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}