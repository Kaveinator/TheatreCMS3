@model TheatreCMS3.Areas.Prod.Models.CastMember

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
        <h4 class="cast-create--title">Create Cast Member</h4>
        
        <div class="cast-create--container">
            <div class="cast-create--form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
                <div class="cast-create--form-width">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="cast-create--form-group">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control cast-create--form-input", placeholder = "Name" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.YearJoined, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="cast-create--form-group">
                            @Html.EditorFor(model => model.YearJoined, new { htmlAttributes = new { @class = "form-control cast-create--form-input", placeholder = "YearJoined" } })
                            @Html.ValidationMessageFor(model => model.YearJoined, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MainRole, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class=" cast-create--form-group">
                            @Html.EditorFor(model => model.MainRole, new { htmlAttributes = new { @class = "form-control cast-create--form-input", placeholder = "MainRole" } })
                            @Html.ValidationMessageFor(model => model.MainRole, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class=" cast-create--form-group">
                            @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control cast-create--form-input", placeholder = "Bio" } })
                            @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CurrentMember, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class=" cast-create--form-group">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CurrentMember)
                                @Html.ValidationMessageFor(model => model.CurrentMember, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Character, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class=" cast-create--form-group">
                            @Html.EditorFor(model => model.Character, new { htmlAttributes = new { @class = "form-control cast-create--form-input", placeholder = "Character" } })
                            @Html.ValidationMessageFor(model => model.Character, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CastYearLeft, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class=" cast-create--form-group">
                            @Html.EditorFor(model => model.CastYearLeft, new { htmlAttributes = new { @class = "form-control cast-create--form-input", placeholder = "CastYearLeft" } })
                            @Html.ValidationMessageFor(model => model.CastYearLeft, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DebutYear, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class=" cast-create--form-group">
                            @Html.EditorFor(model => model.DebutYear, new { htmlAttributes = new { @class = "form-control cast-create--form-input", placeholder = "DebutYear" } })
                            @Html.ValidationMessageFor(model => model.DebutYear, "", new { @class = "text-danger" })
                        </div>
                    </div>
            
                    
                        <div class="cast-create--button">
                            <input type="submit" value="Create" class="btn btn-danger btn-lg w-auto" />
                        </div>
                    
                       

                </div>


            </div>
        </div>
        
}

        <div class="cast-create--back-button"> 
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "cast-create--btn btn-lg mx-2 text-color" })
        </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
