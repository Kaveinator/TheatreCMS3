@model TheatreCMS3.Areas.Prod.Models.CalendarEvent

@{
  ViewBag.Title = "Edit Calendar Event";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm(null, null, FormMethod.Post, htmlAttributes: new { @class = "CalendarEvents-Create--form" })) {
  <br />
  <div class="form-group">
    <h2 class="cms-text-main-light col-md-10" style="padding: 0;">Modify Event</h2>
    <p class="col-md-10" style="padding: 0;">What are the change in plans?</p>
    <div class="cms-text-secondary col-md-10" style="padding: 0;">
      @Html.AntiForgeryToken()
      @Html.HiddenFor(model => model.EventId)
      @foreach (var field in new (MvcHtmlString label, MvcHtmlString editor, MvcHtmlString validator)[] {(
          Html.LabelFor(model => model.Title),
          Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Event Name" } }),
          Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        ), (
          Html.LabelFor(model => model.Description),
          Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Event Details" } }),
          Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        ), (
          Html.LabelFor(model => model.StartDate, "Start Date"),
          Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Start Date" } }),
          Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        ), (
          Html.LabelFor(model => model.EndDate, "End Date"),
          Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", placeholder = "End Date" } }),
          Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        ), (
          Html.LabelFor(model => model.AllDay, "Event Lasts All Day"),
          Html.EditorFor(model => model.AllDay),
          Html.ValidationMessageFor(model => model.AllDay, "", new { @class = "text-danger" })
        ), (
          Html.LabelFor(model => model.StartTime, "Start Time"),
          Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", placeholder = "Only fill this out if you left 'Event Lasts All Day' unchecked" } }),
          Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
        ), (
          Html.LabelFor(model => model.EndTime, "End Time"),
          Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", placeholder = "Only fill this out if you left 'Event Lasts All Day' unchecked" } }),
          Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
        ), (
          Html.LabelFor(model => model.TicketsAvailable, "Available Tickets"),
          Html.EditorFor(model => model.TicketsAvailable, new { htmlAttributes = new { @class = "form-control", placeholder = "How many people would be able to attent at max" } }),
          Html.ValidationMessageFor(model => model.TicketsAvailable, "", new { @class = "text-danger" })
        ), (
          Html.LabelFor(model => model.IsProduction, "Available Tickets"),
          Html.EditorFor(model => model.IsProduction),
          Html.ValidationMessageFor(model => model.IsProduction, "", new { @class = "text-danger" })
        )}) {
        <div style="margin-bottom: 1rem;">
          @field.label
          @field.editor
          @field.validator
        </div>
      }
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      <input type="submit" value="Save Changes" class="dropdown-item text-primary" />
      <a href="@Url.Action("Delete", new { id = Model.EventId })" class="dropdown-item text-danger">Delete</a>
      <a href="@Url.Action("Index")" class="dropdown-item text-secondary">Back to List</a>
    </div>
  </div>
}