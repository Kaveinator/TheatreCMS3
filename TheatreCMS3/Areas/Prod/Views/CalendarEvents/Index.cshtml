@model IEnumerable<CalendarEvent>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "create-button" })
</p>

@using (Html.BeginForm())
{
    foreach (var item in Model)
    {
        <div class="event-container">
            <div class="event-date">
                <div class="event-day">@item.StartDate.Day</div>
                <div class="event-month">@item.StartDate.ToString("MMM")</div>

                @{
                    // Calculate event duration in days
                    TimeSpan? duration = item.EndDate - item.StartDate;
                    var durationText = duration.HasValue
                        ? (duration.Value.TotalDays > 1 ? $"{duration.Value.TotalDays} day" : "All Day")
                        : string.Empty;
                }
                <div class="event-duration" data-toggle="popover" data-placement="top" title="Event Duration" data-content="This is a @durationText event.">
                    <i class="fas fa-clock"></i> @durationText
                </div>

            </div>
            <div class="event-details">
                <div class="event-title">@Html.DisplayFor(modelItem => item.Title)</div>
                @if (item.StartTime.HasValue && item.EndTime.HasValue)
                {
                    <div class="event-time">
                        <span class="event-start-time">@item.StartTime.Value.ToString("ddd, h:mmtt")</span>
                        <span>-</span>
                        <span class="event-end-time">@item.EndTime.Value.ToString("h:mmtt")</span>
                    </div>
                }
                <div class="event-description">@Html.DisplayFor(modelItem => item.Description)</div>

                
            </div>
        </div>
    }
}

<script>
    // Bootstrap Popover
    $(function () {
        $('[data-toggle="popover"]').popover();
    });
</script>
