@model TheatreCMS3.Areas.Prod.Models.CastMember

@using TheatreCMS3.Areas.Prod.Models

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2 class="CastMember-CreateEdit-Header">Create Cast Castmember</h2>


@using (Html.BeginForm("Create", "CastMember", FormMethod.Post, new { @class = "CastMember-CreateEdit-FormStyle", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Insuree</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CastMemberId, "ID", htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="col-md-10 CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.CastMemberId, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Enter ID: " } })
                @Html.ValidationMessageFor(model => model.CastMemberId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="col-md-10 CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Enter Name: " } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearJoined, "Year Joined", htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="col-md-10 CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.YearJoined, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Year Joined: " } })
                @Html.ValidationMessageFor(model => model.YearJoined, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MainRole, "Main Role", htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="col-md-10 CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.MainRole, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Main Role: " } })
                @Html.ValidationMessageFor(model => model.MainRole, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="col-md-10 CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Bio: " } })
                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentMember, "Current Member", htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="col-md-10 CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.CurrentMember, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = ": " } })
                @Html.ValidationMessageFor(model => model.CurrentMember, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Character, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="col-md-10 CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.Character, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Character: " } })
                @Html.ValidationMessageFor(model => model.Character, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CastYearLeft, "Years Left", htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="col-md-10 CastMember-CreateEdit-Div">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CastYearLeft)
                    @Html.ValidationMessageFor(model => model.CastYearLeft, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DebutYear, "Debut Year", htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="col-md-10 CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.DebutYear, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Debut Year: " } })
                @Html.ValidationMessageFor(model => model.DebutYear, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 CastMember-CreateEdit-Div">
                <input type="submit" value="Create" class="btn btn-default CastMember-CreateEdit-CreateButton" />
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 CastMember-CreateEdit-Div">
                <a class="btn btn-default CastMember-CreateEdit-BackButton" href="/Prod/Index" > Back </a>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

