@model TheatreCMS3.Areas.Prod.Models.CastMember


@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="CastMember-CreateEdit-Header">Edit Cast Member</h2>


@using (Html.BeginForm("Edit", "CastMember", FormMethod.Post, new { @class = "CastMember-CreateEdit-FormStyle", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CastMemberId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Edit Name: " } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearJoined, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.YearJoined, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Edit Year Joined: " } })
                @Html.ValidationMessageFor(model => model.YearJoined, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MainRole, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.MainRole, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Edit Main Role: " } })
                @Html.ValidationMessageFor(model => model.MainRole, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-controlCastMember-CreateEdit-Placeholder", placeholder = "Edit Bio: " } })
                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentMember, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="CastMember-CreateEdit-Div">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CurrentMember)
                    @Html.ValidationMessageFor(model => model.CurrentMember, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Character, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.Character, new { htmlAttributes = new { @class = "form-controlCastMember-CreateEdit-Placeholder", placeholder = "Edit Character: " } })
                @Html.ValidationMessageFor(model => model.Character, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CastYearLeft, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.CastYearLeft, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Edit Years Left: " } })
                @Html.ValidationMessageFor(model => model.CastYearLeft, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DebutYear, htmlAttributes: new { @class = "col-md-2 CastMember-CreateEdit-Labels" })
            <div class="CastMember-CreateEdit-Div">
                @Html.EditorFor(model => model.DebutYear, new { htmlAttributes = new { @class = "form-control CastMember-CreateEdit-Placeholder", placeholder = "Edit Debut Year: " } })
                @Html.ValidationMessageFor(model => model.DebutYear, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 CastMember-CreateEdit-Div">
                <input type="submit" value="Save" class="btn btn-default CastMember-CreateEdit-CreateButton" />
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 CastMember-CreateEdit-Div">
                    <a class="btn btn-default CastMember-CreateEdit-BackButton" href="/Prod/Index"> Back </a>
                </div>
            </div>
        </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
