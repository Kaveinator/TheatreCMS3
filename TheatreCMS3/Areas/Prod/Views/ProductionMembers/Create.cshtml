@model TheatreCMS3.Areas.Prod.Models.ProductionMember

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center mt-4 mb-4">Create Production Member</h2>


@using (Html.BeginForm("Create", "ProductionMembers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal mx-auto col-sm-6 ProductionMember-Create--formContainer">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--inputField", @placeholder = "Name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.EditorFor(model => model.YearJoined, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--inputField", @placeholder = "Year Joined" } })
                @Html.ValidationMessageFor(model => model.YearJoined, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.EnumDropDownListFor(model => model.MainRole, htmlAttributes: new { @class = "form-control ProductionMember-Create--inputField", @placeholder = "Main Role" })
                @Html.ValidationMessageFor(model => model.MainRole, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--inputField", @placeholder = "Bio" } })
                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentMember, htmlAttributes: new { @class = "control-label" })
            <div>
                <div class="checkbox">
                    @Html.EditorFor(model => model.CurrentMember)
                    @Html.ValidationMessageFor(model => model.CurrentMember, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.EditorFor(model => model.CastYearLeft, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--inputField", @placeholder = "Cast Year Left" } })
                @Html.ValidationMessageFor(model => model.CastYearLeft, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.EditorFor(model => model.DebutYearLeft, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--inputField", @placeholder = "Debut Year Left" } })
                @Html.ValidationMessageFor(model => model.DebutYearLeft, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label" })
            <div>
                <input type="file" name="file" />
            </div>
        </div>

        <div class="form-group">
            <div>
                <input type="submit" value="Create" class="ProductionMember-Create--input" />
            </div>
        </div>
    </div>
}

<button class="ProductionMember-Create--button">
    @Html.ActionLink("Back to List", "Index")
</button>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
