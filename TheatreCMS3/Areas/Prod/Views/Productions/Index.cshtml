@model PagedList.IPagedList<TheatreCMS3.Areas.Prod.Models.Production>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Index</h2>
@Html.ActionLink("Create New", "Create", null, new { @class = "btn production-index--create" })
@using (Html.BeginForm("Index", "Productions", FormMethod.Get))
{
    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @id = "searchBar", @class = "form-control production-index--searchBox", @placeholder = "Find by title" })
    <input type="submit" value="Search" class="btn btn-default production-index--searchSubmit" />
}
@if (Model.Count() == 0)
{<h5 class="production-index--noProductionsMsg">No records found.</h5> }
else
{
    @*bootstrap classes are set so that cards are laid out in rows of 5 columns*@
    <div class="row row-cols-1 row-cols-md-5 production-index--cardContainer">
        @foreach (var item in Model)
         {
            <div class="col-mb-4">
                <div class="card production-index--card">
                    @*placeholder img until production photos model is linked*@
                    <span data-toggle="modal" data-target="#production-index--detailsModal"
                          @* details to populate modal *@
                          data-title="@item.Title"
                          data-desc="@item.Description"
                          data-playwright="@item.Playwright"
                          data-runtime="@item.Runtime"
                          @* shows time AND date if displayfor is not used *@
                          data-opening="@Html.DisplayFor(modelItem => item.OpeningDay)"
                          data-closing="@Html.DisplayFor(modelItem => item.ClosingDay)"
                          data-showtimeeve="@Html.DisplayFor(modelItem => item.ShowTimeEve)"
                          data-showtimemat="@Html.DisplayFor(modelItem => item.ShowTimeMat)"
                          data-season="@item.Season"
                          data-premiere="@item.IsWorldPremiere"
                          data-tickets="@item.TicketLink"
                          data-currentlyshowing="@item.IsCurrentlyShowing">
                        <img src="~/Content/images/theater.jpg" class="card-img-top production-index--image" alt="@Html.DisplayFor(modelItem => item.Title)">
                    </span>
                    <div class="production-index--badgeLayer">
                        <a class="badge badge-pill production-index--badge production-index--badgeDelete" href="@Url.Action("Delete", "Productions", new { id = item.ProductionId })">
                            Delete
                        </a>
                        <a class="badge badge-pill production-index--badge production-index--badgeEdit" href="@Url.Action("Edit", "Productions", new { id = item.ProductionId })">
                            Edit
                        </a>
                    </div>
                    <div class="card-body">
                        <h5>@Html.DisplayFor(modelItem => item.Title)</h5>
                    </div>
                </div>
            </div>
         }
    </div>
    @* Details Modal *@
    <div class="modal modal-lg fade" id="production-index--detailsModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Details</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p class="prodTitle"></p>
                    <p class="prodDesc"></p>
                    <p class="prodPlaywright"></p>
                    <p class="prodRuntime"></p>
                    <p class="prodOpen"></p>
                    <p class="prodClose"></p>
                    <p class="prodTimeEve"></p>
                    <p class="prodTimeMat"></p>
                    <p class="prodSeason"></p>
                    <p class="prodTickets"></p>
                    <p class="prodPremiere"></p>
                    <p class="prodCurrently"></p>
                </div>
            </div>
        </div>
    </div>
}
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }), PagedListRenderOptions.OnlyShowFivePagesAtATime)