@model PagedList.IPagedList<TheatreCMS3.Areas.Prod.Models.Production>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/Areas/Prod.js"></script>

<h2 class=".Prod-All-header text-center">Index</h2>

<div class="col-md-offset-2 col-md-12 Productions-Index-ButtonSpace">
    @Html.ActionLink("Create New", "Create", null, new { @class = "Prod-All-MainBtn btn btn-default" })
</div>

@using (Html.BeginForm("Index", "Productions", FormMethod.Get))
{
    {
<p>
    <!-- Search Box -->
    Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "Prod-All-form Prod-All-textsearchbox_spacing Prod-All-topsearchbox_width" })
    <input type="submit" value="Search" class="Prod-All-SecondaryBtn Prod-All-textsearchbox_spacing" />
    <!-- Paging Sort By Field Section -->
    <span class="Prod-All-PagingLinkPos">
        Sort by:
        <button class="Prod-All-SecondaryBtn Prod-All-textsearchbox_spacing">@Html.ActionLink("Title", "index", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter}, new { @class = "Prod-All-PagingLinkButton" })</button>
    </span>
</p>
    }
    foreach (var item in Model)
    {
<div class="Productions-Index-Cards">
    <div class="card" style="width: 18rem;">
        <a href="@Url.Action("Details", "Productions", new { id = item.ProductionID})" data-target="#myModal" data-toggle="modal" data-modal="" aria-hidden="true">
            <img src="~/Content/images/ProductionPhotos/Hamilton/05.jpg" class="card-img-top Productions-Index-Card_Image" alt="production image">
        </a>
        <div class="card-body Productions-Index-Card_Body">
            <p>@Html.DisplayFor(modelItem => item.Title, new { @class = "Production-Card-Body_Text" })</p>
            <p class="Productions-Index-EditDelete_PillBadges">
                <div class="Production-Index-PillContainer">
                    <a href="@Url.Action("Edit", "Productions", new { id = item.ProductionID })" class="badge badge-pill Prod-All-PillBadgeColor">
                        Edit
                    </a>
                    <a href="@Url.Action("Delete", "Productions", new { id = item.ProductionID })" class="badge badge-pill Prod-All-PillBadgeColor">
                        Delete
                    </a>
                </div>
            </p>
        </div>

    </div>
</div>
    }
}

<!-- Modal section -->
<div class="modal fade text-center" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<!-- Paging Page Numbers Section -->
<div class="Prod-All-PagingPageContainer">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount <br />
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }), new PagedListRenderOptions()
        {
            LiElementClasses = new List<string> { "Prod-All-PagingPageNum" }
        })
</div>
