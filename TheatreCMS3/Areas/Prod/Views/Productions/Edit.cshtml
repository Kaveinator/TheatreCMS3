@model TheatreCMS3.Areas.Prod.Models.Productions

@{
    ViewBag.Title = "Edit";
}
<link href="~/Content/Areas/Prod.css" rel="Stylesheet" type="text/css" />

<div class="p-5 text-center">
  <h2 class="top-header">Edit Production</h2>
</div>

  @using (Html.BeginForm())
  {
    @Html.AntiForgeryToken()


<div class="d-flex justify-content-center">
  <div class="form-horizontal" id="ProdCrForm">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductionId)

    <div class="form-group text-center">
      @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="p-2 mx-auto">
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group text-center">
      @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="p-2 mx-auto">
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group text-center">
      @Html.LabelFor(model => model.Playwright, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="p-2 mx-auto">
        @Html.EditorFor(model => model.Playwright, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Playwright, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group text-center">
      @Html.LabelFor(model => model.Runtime, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="p-2 mx-auto">
        @Html.EditorFor(model => model.Runtime, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Runtime, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group text-center">
      @Html.LabelFor(model => model.OpeningDay, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="p-2 mx-auto">
        @Html.EditorFor(model => model.OpeningDay, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.OpeningDay, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group text-center">
      @Html.LabelFor(model => model.ClosingDay, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="p-2 mx-auto">
        @Html.EditorFor(model => model.ClosingDay, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ClosingDay, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group text-center">
      @Html.LabelFor(model => model.ShowTimeEve, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="p-2 mx-auto">
        @Html.EditorFor(model => model.ShowTimeEve, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ShowTimeEve, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group text-center">
      @Html.LabelFor(model => model.ShowTimeMat, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="p-2 mx-auto">
        @Html.EditorFor(model => model.ShowTimeMat, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ShowTimeMat, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group text-center">
      @Html.LabelFor(model => model.Season, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="p-2 mx-auto">
        @Html.EditorFor(model => model.Season, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Season, "", new { @class = "text-danger" })
      </div>
    </div>
    <div class="checkbox-container">
      <div class="form-group text-center">
        @Html.LabelFor(model => model.IsWorldPremiere, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="p-2 mx-auto d-flex justify-content-center">
          <div class="checkbox">
            @Html.EditorFor(model => model.IsWorldPremiere)
            @Html.ValidationMessageFor(model => model.IsWorldPremiere, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>
      </div>
      <div class="form-group text-center">
        @Html.LabelFor(model => model.TicketLink, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="p-2 mx-auto">
          @Html.EditorFor(model => model.TicketLink, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.TicketLink, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="checkbox-container">
        <div class="form-group text-center">
          @Html.LabelFor(model => model.IsCurrentlyShowing, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="p-2 mx-auto d-flex justify-content-center">
            <div class="checkbox">
              @Html.EditorFor(model => model.IsCurrentlyShowing)
              @Html.ValidationMessageFor(model => model.IsCurrentlyShowing, "", new { @class = "text-danger" })
            </div>
          </div>
        </div>
        </div>
        <div class="form-group d-flex justify-content-center" id="ProdCrBtn">
          <div class="d-flex flex-column">
            <input type="submit" value="Save" class="btn btn-default" id="ProdCrSubmit" />
            <button type="button" class="btn btn-default" id="ProdCrBack">
              <span> @Html.ActionLink("Back to List", "Index")</span>
            </button>
          </div>
        </div>
      </div>
  </div>
  }


  @section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
  }
