@model TheatreCMS3.Areas.Prod.Models.Production

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="production-createEdit--formHeader">
    <h2>Create Production</h2>
</div>

<div class="production-createEdit--formContainer">    
    @using (Html.BeginForm()) 
     {
        @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @placeholder = "Title", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @placeholder = "Description", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Playwright, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Playwright, new { htmlAttributes = new { @placeholder = "Playwright", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Playwright, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Runtime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Runtime, new { htmlAttributes = new { @placeholder = "Runtime", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Runtime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OpeningDay, "Opening Day", htmlAttributes: new { @class = "control-label col-md-2", @name = "Opening Day"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.OpeningDay, new { htmlAttributes = new { @placeholder = "Opening Day", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OpeningDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClosingDay, "Closing Day", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClosingDay, new { htmlAttributes = new { @placeholder = "Closing Day", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClosingDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShowTimeEve, "Evening Show time", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShowTimeEve, new { htmlAttributes = new { @placeholder = "Evening Show Time", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShowTimeEve, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShowTimeMat, "Morning Show time", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShowTimeMat, new { htmlAttributes = new { @placeholder = "Morning Show Time", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShowTimeMat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Season, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Season, new { htmlAttributes = new { @placeholder = "Season", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Season, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketLink, "Ticket Link", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TicketLink, new { htmlAttributes = new { @placeholder = "Ticket Link", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TicketLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group production-createEdit--checkbox1">
            @Html.LabelFor(model => model.IsWorldPremiere, "Is World Premiere", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsWorldPremiere)
                    @Html.ValidationMessageFor(model => model.IsWorldPremiere, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group production-createEdit--checkbox2">
            @Html.LabelFor(model => model.IsCurrentlyShowing, "Is Currently Showing", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCurrentlyShowing)
                    @Html.ValidationMessageFor(model => model.IsCurrentlyShowing, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div>
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default production-createEdit--submit" />
            </div>
        </div>
    </div>
     }
     @Html.ActionLink("Back to List", "Index", null, new { @class = "btn production-createEdit--back" })
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
