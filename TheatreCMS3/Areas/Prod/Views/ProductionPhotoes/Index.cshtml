@model IEnumerable<TheatreCMS3.Areas.Prod.Models.ProductionPhoto>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/Areas/Prod.css" />
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default production-index-createbtn" })
</p>

@using (Html.BeginForm("Index", "Productions", FormMethod.Get))
{


foreach (var group in Model.OrderBy(x => x.Title))
{
     
    <h2>@group.Title</h2>
    <div class="card-deck">
        @foreach (var item in Model)
        {
            if (item.Title == group.Title)
            {
                <div class="productionPhotos-index-card" style="width: 18rem;">
                    <div class="productionPhotos-index-btnhover">
                        <a>
                            @if (item.PhotoFile != null)//this displays the image that the user uploaded if the given photoFile is not null
                            {
                                <img src="data:image;base64,@System.Convert.ToBase64String(item.PhotoFile)" class="productionPhotos-index-imageSizing" />//converts the byte[] into an image
                            }
                            else
                            {
                                <img src="~/Content/images/ProductionPhotos/Hamilton/01.jpg" class="productionPhotos-index-imageSizing"/>//if the user doesnt upload an image this will be displayed in its place
                            }
                        </a>
                    </div>
                    <div class="productionPhotos-index-cardBody productionPhotos-index-btnhover">
                        <h3 class="card-title text-center productionPhotos-index-TitleText">@item.Title</h3>
                        <p class="card-text productionPhotos-index-BodyText">@item.Description</p>
                        <span>
                            this creates a pill badge/btn that links to the specific production details
                            @Html.ActionLink("Delete", "Delete", new { id = item.ProPhotoID }, new { @class = "badge badge-pill productionPhotos-index-deletebtn" })
                        </span>
                        <span>
                            this creates a pill badge/btn that links to the specific production edit page
                            @Html.ActionLink("Edit", "Edit", new { id = item.ProPhotoID }, new { @class = "badge badge-pill productionPhotos-index-editbtn" })
                        </span>
                    </div>
                </div>
            }

        <!-- Modal -->
        @*<div class="modal fade" id="openModal-@item.ProductionID" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Details</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div>
                            <h4>Production</h4>
                            <hr />
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.DisplayNameFor(model => item.Title)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Title)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.Description)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Description)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.Playwright)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Playwright)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.Runtime)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Runtime)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.OpeningDay)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.OpeningDay)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.ClosingDay)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.ClosingDay)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.ShowTimeEve)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.ShowTimeEve)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.ShowTimeMat)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.ShowTimeMat)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.Season)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Season)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.IsWorldPremiere)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.IsWorldPremiere)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.TicketLink)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.TicketLink)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => item.IsCurrentlyShowing)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.IsCurrentlyShowing)
                                </dd>

                            </dl>
                        </div>
                        <p>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ProductionID }) |
                            @Html.ActionLink("Back to List", "Index")
                        </p>
                    </div>
                </div>
            </div>
        </div>*@
        }

    </div>
    }
}